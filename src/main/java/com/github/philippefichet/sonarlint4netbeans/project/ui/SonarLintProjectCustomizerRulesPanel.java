/*
 * sonarlint4netbeans: SonarLint integration for Apache Netbeans
 * Copyright (C) 2022 Philippe FICHET.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA 02110-1301  USA
 */
package com.github.philippefichet.sonarlint4netbeans.project.ui;

import com.github.philippefichet.sonarlint4netbeans.SonarLintEngine;
import com.github.philippefichet.sonarlint4netbeans.SonarLintUtils;
import com.github.philippefichet.sonarlint4netbeans.ui.SonarLintPanelChangedListener;
import com.github.philippefichet.sonarlint4netbeans.ui.SonarLintRuleListPanel;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.util.HashMap;
import java.util.Map;
import org.netbeans.api.project.Project;
import org.netbeans.spi.project.ui.support.ProjectCustomizer;
import org.sonarsource.sonarlint.core.client.api.common.RuleKey;

/**
 * Panel to configure all rule settings on project
 * @author FICHET Philippe &lt;philippe.fichet@laposte.net&gt;
 */
public class SonarLintProjectCustomizerRulesPanel extends javax.swing.JPanel implements SonarLintPanelChangedListener {
    private final SonarLintRuleListPanel sonarLintPanel;
    private final Map<RuleKey, Boolean> ruleKeyChanged = new HashMap<>();

    /**
     * Creates new form SonarLintProjectCustomizerPanel
     */
    public SonarLintProjectCustomizerRulesPanel(SonarLintEngine sonarLintEngine, Project project, ProjectCustomizer.Category category) {
        category.setOkButtonListener((ActionEvent e) -> 
            SonarLintUtils.saveEnabledOrDisabledRules(sonarLintEngine, project, ruleKeyChanged)
        );
        initComponents();
        sonarLintPanel = new SonarLintRuleListPanel(
            ruleKeyChanged::put,
            (String ruleKeyChanged, String parameterName, String parameterValue) -> {
                SonarLintUtils.changeRuleParameterValue(sonarLintEngine, project, ruleKeyChanged, parameterName, parameterValue);
            },
            sonarLintEngine,
            project);
        add(sonarLintPanel, BorderLayout.CENTER);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void changed() {
        // Nothing actualy
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
